/*
 *   Copyright 2007 skynamics AG
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */
package org.openbp.common.template;

import java.util.ArrayList;
import java.util.Iterator;

/**
 * Container that holds the names and MIME types of files that have been generated by the template engine.
 *
 * @author Andreas Putz
 */
public class TemplateEngineResult
{
	//////////////////////////////////////////////////
	// @@ Members
	//////////////////////////////////////////////////

	/** List of path names of the generated files */
	private ArrayList pathList;

	/** List of mime types of the generated files */
	private ArrayList mimeTypeList;

	//////////////////////////////////////////////////
	// @@ Construction
	//////////////////////////////////////////////////

	/**
	 * Constructor.
	 */
	public TemplateEngineResult()
	{
		pathList = new ArrayList();
		mimeTypeList = new ArrayList();
	}

	//////////////////////////////////////////////////
	// @@ Member access
	//////////////////////////////////////////////////

	/**
	 * Adds the file path and the mime type of that file.
	 *
	 * @param fileName The file name
	 * @param mimeType The mime type
	 */
	public void add(String fileName, String mimeType)
	{
		pathList.add(fileName);
		mimeTypeList.add(mimeType);
	}

	/**
	 * Gets the first file name.
	 *
	 * @return The name of the first file that has been generated or null
	 * if not files have been generated.
	 */
	public String getFirstFileName()
	{
		if (pathList.size() == 0)
			return null;

		return (String) pathList.get(0);
	}

	/**
	 * Gets the mime type of the given file name.
	 *
	 * @param fileName The file name
	 * @return The mime type of the file or null if this file is unknown
	 */
	public String getMimeType(String fileName)
	{
		int index = pathList.indexOf(fileName);
		if (index == -1)
			return null;

		return (String) mimeTypeList.get(index);
	}

	/**
	 * Returns an iterator of all file names of the generated files.
	 *
	 * @return An Iterator of strings
	 */
	public Iterator getResultFilePaths()
	{
		return pathList.iterator();
	}
}
